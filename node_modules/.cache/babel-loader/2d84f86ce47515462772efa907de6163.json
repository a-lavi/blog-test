{"ast":null,"code":"const apiUrl = \"http://localhost:5050\"; //testt\n//LOGIN>>>>>>>>>>>>>>>>>>>>>>\n\nasync function loginControl(_ref) {\n  let {\n    username,\n    password\n  } = _ref;\n  const response = await fetch(apiUrl + '/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const tok = await response.json();\n    console.log(response);\n    localStorage.setItem('token', tok.data);\n    return getBoardGames();\n  } else {\n    console.log('Error: ', await response.json());\n    throw Error('Login Failed');\n  }\n} //REGISTER>>>>>>>>>>>>>>>>>>>>\n\n\nasync function registerControl(_ref2) {\n  let {\n    username,\n    password\n  } = _ref2;\n  const response = await fetch(apiUrl + '/api/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n\n  if (response.ok) {\n    console.log(response);\n    return getBoardGames();\n  } else {\n    const err = await response.json();\n    console.log(err.error);\n    console.log(response);\n  }\n\n  return getBoardGames();\n} //CHANGE PASSWORD>>>>>>>>>>>>>>>>>>\n\n\nasync function changePassControl(_ref3) {\n  let {\n    password\n  } = _ref3;\n  const response = await fetch(apiUrl + '/api/change-password', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      newPassword: password,\n      token: localStorage.getItem('token')\n    })\n  });\n\n  if (response.ok) {\n    console.log(response);\n    return getBoardGames();\n  } else {\n    const err = await response.json();\n    console.log(err.error);\n    console.log('errorrr');\n  }\n}\n\nasync function getBoardGames() {\n  const response = await fetch(apiUrl + '/api/boardgames');\n  const result = await response.json();\n  return result;\n}\n\nasync function getSingleBoardGame(slug) {\n  //console.log(SingleGameTitle)\n  //const slug = SingleGameTitle.replaceAll(\" \", \"_\").toLowerCase()\n  console.log(slug);\n  const response = await fetch(apiUrl + '/api/boardgames/byslug/' + slug);\n  const result = await response.json();\n  return result;\n}\n\nasync function gameEdit(_ref4) {\n  let {\n    id,\n    title,\n    author,\n    imgUrl,\n    richText,\n    publisher,\n    accessToken,\n    roles\n  } = _ref4;\n  const response = await fetch(apiUrl + `/api/boardgames/${id}`, {\n    method: 'Put',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + accessToken\n    },\n    body: JSON.stringify({\n      title,\n      author,\n      imgUrl,\n      richText,\n      publisher\n    })\n  });\n\n  if (response.ok) {\n    return getBoardGames();\n  }\n\n  throw Error('Edit Game failed');\n}\n\nasync function addBoardGames(_ref5) {\n  let {\n    title,\n    author,\n    imgUrl,\n    richText,\n    publisher,\n    accessToken,\n    roles\n  } = _ref5;\n  const response = await fetch(apiUrl + '/api/boardgames', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + accessToken\n    },\n    body: JSON.stringify({\n      title,\n      author,\n      imgUrl,\n      richText,\n      publisher\n    })\n  });\n\n  if (response.ok) {\n    return getBoardGames();\n  }\n\n  throw Error('Adding author failed');\n}\n\nasync function deleteBoardGames(id) {\n  const response = await fetch(apiUrl + `/api/boardgames/${id.id}`, {\n    method: 'Delete',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + id.accessToken\n    },\n    body: JSON.stringify({\n      id\n    })\n  });\n\n  if (response.ok) {\n    return getBoardGames();\n  }\n\n  throw Error('Edit Game failed');\n}\n\nexport { getBoardGames, addBoardGames, gameEdit, deleteBoardGames,\n/* registerControl,\nloginControl, */\ngetSingleBoardGame, changePassControl };","map":{"version":3,"names":["apiUrl","loginControl","username","password","response","fetch","method","headers","credentials","body","JSON","stringify","ok","tok","json","console","log","localStorage","setItem","data","getBoardGames","Error","registerControl","err","error","changePassControl","newPassword","token","getItem","result","getSingleBoardGame","slug","gameEdit","id","title","author","imgUrl","richText","publisher","accessToken","roles","addBoardGames","deleteBoardGames"],"sources":["/Users/alirahmani/Project/blog_project/src/Controllers/api.js"],"sourcesContent":["const apiUrl = \"http://localhost:5050\"\n//testt\n\n\n//LOGIN>>>>>>>>>>>>>>>>>>>>>>\n\nasync function loginControl( {username, password} ) {\n    \n    const response = await fetch( apiUrl + '/api/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n            username,\n            password\n        })\n    })\n    if (response.ok) {\n        const tok= await response.json()\n        console.log(response)\n        localStorage.setItem('token', tok.data)\n        \n        return getBoardGames()\n    }else{\n        console.log('Error: ',await response.json())\n        throw Error('Login Failed')\n    }\n    \n}\n\n//REGISTER>>>>>>>>>>>>>>>>>>>>\n\nasync function registerControl( {username, password} ) {\n    \n    const response = await fetch( apiUrl + '/api/register', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n    })\n    if (response.ok) {\n        console.log(response)\n        return getBoardGames()\n    }else{\n     const err=  await response.json()\n     console.log(err.error)\n     console.log(response)\n    }\n   return getBoardGames()\n}\n\n\n//CHANGE PASSWORD>>>>>>>>>>>>>>>>>>\nasync function changePassControl({password}){\n\n    const response = await fetch( apiUrl + '/api/change-password', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            newPassword: password,\n            token: localStorage.getItem('token')\n        })\n    })\n    if (response.ok) {\n        console.log(response)\n        return getBoardGames()\n    }else{\n     const err=  await response.json()\n     console.log(err.error)\n     console.log('errorrr')\n    }\n}\n\n\n\n\nasync function getBoardGames(){\n    const response =await fetch (apiUrl + '/api/boardgames') \n    const result =await response.json()\n    return result\n}\n\nasync function getSingleBoardGame(slug){\n    //console.log(SingleGameTitle)\n    //const slug = SingleGameTitle.replaceAll(\" \", \"_\").toLowerCase()\n    console.log(slug)\n    const response =await fetch (apiUrl + '/api/boardgames/byslug/' + slug) \n    const result =await response.json()\n    return result\n}\n\n\n\nasync function gameEdit({id,title,\n    author,\n    imgUrl,\n    richText,\n    publisher,accessToken,roles}){\n        \n    const response = await fetch (apiUrl + `/api/boardgames/${id}`,{\n        \n        method: 'Put',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + accessToken\n        },\n        body: JSON.stringify({title,\n            author,\n            imgUrl,\n            richText,\n            publisher})\n    })\n    if (response.ok) {\n        return getBoardGames()\n    }\n\n    throw Error('Edit Game failed')\n    \n}\n\n\nasync function addBoardGames( {title,\n    author,\n    imgUrl,\n    richText,\n    publisher,accessToken,roles} ) {\n        \n    const response = await fetch( apiUrl + '/api/boardgames', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + accessToken\n        },\n        body: JSON.stringify({title,\n            author,\n            imgUrl,\n            richText,\n            publisher})\n    })\n    if (response.ok) {\n        return getBoardGames()\n    }\n\n    throw Error('Adding author failed')\n    \n}\n\n\n\nasync function deleteBoardGames(id){\n    const response =await fetch (apiUrl + `/api/boardgames/${id.id}`,{\n        \n        method: 'Delete',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + id.accessToken\n        },\n        body: JSON.stringify({id})\n    })\n    if (response.ok) {\n        \n        return getBoardGames()\n    }\n\n    throw Error('Edit Game failed')\n}\n\n\n\n\nexport  {\n    getBoardGames,\n    addBoardGames,\n    gameEdit,\n    deleteBoardGames,\n    /* registerControl,\n    loginControl, */\n    getSingleBoardGame,\n    changePassControl\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}